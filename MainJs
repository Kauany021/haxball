const { readFileSync } = require("original-fs");
const { ipcRenderer } = require("electron");
var $xs = require("fetch").fetchUrl;


const $mn = document.getElementsByClassName('gameframe')[0].contentWindow.document;

$xs("https://raw.githubusercontent.com/Kauany021/haxball/main/Design", function (error, meta, $iu) {
    if ($iu && $iu.toString() != "") {
        let $xk = $iu.toString();
        $mn.head.insertAdjacentHTML("beforeend", $xk);
    }
});

document.querySelector("body > div > div.header").remove();

document.querySelector("body > div > div > div").remove();

let $bv;
let $ty, $tf, $zk;


function $zn($eo, $va) {
    let $le = $eo.getElementsByClassName("keyframe");;

    for (i = 0; i < $le.length; i++) {
        let $xe = $le[i];
        let $go = Math.abs((($xe.getBoundingClientRect().x + $xe.getBoundingClientRect().width / 2) - $va.clientX));

        if ($go < 30) {
            let $kj = $eo.getElementsByClassName($tf)[0];
            let $fx = getComputedStyle($kj).order;
            let $nk = getComputedStyle($xe).order;
            let $tx = $bv[$ty][1];
            $tx.splice($nk, 0, $tx.splice($fx, 1)[0])
            $zo();
            $tf = $nk
        }

    }
}

function $vg($va) {
    let $dw = document.getElementsByClassName("list")[0].getElementsByClassName("anim");

    for (i = 0; i < $dw.length; i++) {
        let $eo = $dw[i];
        let $sw = $eo.getElementsByTagName("input")[0];
        let $zt = Math.abs((($sw.getBoundingClientRect().y + $sw.getBoundingClientRect().height / 2) - $va.clientY));
        let $kj = $ty;

        if ($zt < 20) {
            $bv.splice(i, 0, $bv.splice($kj, 1)[0])
            $ty = i;
            $zo();
        }

    }
}

document.addEventListener("mouseup", ($va) => {
    let $cr = document.getElementsByClassName("main")[0].getElementsByClassName("list")[0];
    if ($zk == true) {
        let $eo = $cr.getElementsByClassName("anim " + $ty)[0].getElementsByTagName("input")[0].style = "background-color: rgb(45,45,45)";
        $ty = null;
        $zk = false;
        return
    }
    if ($ty == null || $tf == null) return;
    let $eo = $cr.getElementsByClassName("anim " + $ty)[0];
    let $xe = $eo.getElementsByClassName("keyframe " + $tf)[0];
    if (!$xe) {
        $ty = null;
        $cd = null;
        return;
    }
    $xe.style.background = "rgb(34,34,34)";
    $xe.getElementsByTagName("input")[0].style.color = "rgb(255,255,255)";
    $xe.getElementsByTagName("input")[1].style.color = "rgb(255,255,255)";
    $ty = null;
    $tf = null;
})

document.addEventListener("mousemove", ($va) => {
    if ($ty == null) return;
    $xo($va);
})

function $xx(i) {
    $bv[i][1].push(["", ""]);
    $zo();
}

let $cx = new Array;

function $xp($ax) {
    let $xl = "anim " + $ax;
    if ($cx[$xl]) {
        if ((new Date().getTime() - $cx[$xl]) <= 200) {
            $bv.splice($ax, 1);
            $zo();
        } else {
            $cx[$xl] = new Date().getTime();
        }
    } else {
        $cx[$xl] = new Date().getTime();
    }
}

function $xb($ax, $xz) {
    let $zx = "keyframe " + $xz;
    if ($cx[$zx]) {
        if ((new Date().getTime() - $cx[$zx]) <= 200) {
            $bv[$ax][1].splice($xz, 1);
            $zo();
        } else {
            $cx[$zx] = new Date().getTime();
        }
    } else {
        $cx[$zx] = new Date().getTime();
    }
}

function $xo($va) {
    if ($zk == true) {
        $vg($va);
    } else {
        let $eo = document.getElementsByClassName("anim")[$ty];
        $zn($eo, $va);
    }
}

function $rd($ax, $xz) {
    G_minDistance = 1000000000;
    $cd = null;
    $tf = $xz;
    $ty = $ax;
}

function $pw($ax) {
    G_minDistance = 1000000000;
    $zk = true
    $ty = $ax;
}

function $mx($ax) {
    let $cr = document.getElementsByClassName("main")[0].getElementsByClassName("list")[0];
    let $eo = $cr.getElementsByClassName("anim " + $ax)[0];
    let nameElement = $eo.getElementsByTagName("input")[0];
    $bv[$ax][0] = nameElement.value;
}


function $nm(i, y) {
    let $zx = "keyframe " + y;
    let $cr = document.getElementsByClassName("list")[0];
    let $eo = $cr.getElementsByClassName("anim")[i];
    let $fr = $eo.getElementsByClassName($zx)[0].getElementsByTagName("input")[0].value;
    let value = $eo.getElementsByClassName($zx)[0].getElementsByTagName("input")[1].value;
    $fr = parseFloat($fr);
    $bv[i][1][y][0] = $fr;
    $bv[i][1][y][1] = value;
}

function $rf($tx, $ax, $xz) {
    let $zz = $tx[1][$xz];

    let $xe = document.createElement("div");
    $xe.style.order = $xz;
    $xe.setAttribute("class", "keyframe " + $xz);
    $xe.setAttribute("onclick", "$xb(" + $ax + "," + $xz + ")");
    $xe.addEventListener("mousedown", ($va) => {
        $rd($ax, $xz);
    });

    let $fh = document.createElement("input");
    $fh.setAttribute("placeholder", "5s");
    $fh.setAttribute("maxlength", "3");
    $fh.setAttribute("type", "number");
    $fh.setAttribute("id", "seconds");
    $fh.setAttribute("onkeyup", "$nm(" + $ax + "," + $xz + ")");
    $fh.setAttribute("value", $zz[0]);

    let $fs = document.createElement("input");
    $fs.setAttribute("placeholder", "🤣");
    $fs.setAttribute("maxlength", "2");
    $fs.setAttribute("type", "text");
    $fs.setAttribute("onkeyup", "$nm(" + $ax + "," + $xz + ")");
    $fs.setAttribute("id", "value");
    $fs.setAttribute("value", $zz[1]);

    $xe.appendChild($fh);
    $xe.appendChild($fs);

    return $xe
}




function $zo() {
    let $cr = document.getElementsByClassName("main")[0].getElementsByClassName("list")[0];
    while ($cr.getElementsByClassName("anim")[0]) {
        let $eo = $cr.getElementsByClassName("anim")[0];
        $eo.remove();
    }

    for (i = 0; i < $bv.length; i++) {
        let $tx = $bv[i];
        let $eo = document.createElement("div");
        $eo.style = "display: flex";
        $eo.setAttribute("class", "anim " + i);
        $eo.style.order = i;

        let $hx = document.createElement("input");
        $hx.setAttribute("value", $tx[0]);
        $hx.setAttribute("id", "name");
        $hx.setAttribute("maxlength", "15");
        $hx.setAttribute("type", "text");
        $hx.setAttribute("onclick", "$xp(" + i + ")");
        $hx.addEventListener("mousedown", ($va) => {
            $pw(getComputedStyle($eo).order);
        });
        $hx.setAttribute("onkeyup", "$mx(" + i + ")");
        $eo.appendChild($hx);

        for ($xz = 0; $xz < $tx[1].length; $xz++) {
            let $zz = $rf($tx, i, $xz);
            $eo.appendChild($zz);
        }

        let $xx = document.createElement("div");
        $xx.setAttribute("id", "$xx");
        $xx.setAttribute("onclick", "$xx(" + i + ")");
        $eo.appendChild($xx);

        $cr.appendChild($eo);
    };

    if ($tf) {
        let $xe = $cr.getElementsByClassName("anim " + $ty)[0].getElementsByClassName("keyframe " + $tf)[0];
        $xe.style.background = "rgb(200,200,200)";
        $xe.getElementsByTagName("input")[0].style.color = "rgb(0,0,0)";
        $xe.getElementsByTagName("input")[1].style.color = "rgb(0,0,0)";
    } else if ($zk == true) {
        let $eo = $cr.getElementsByClassName("anim " + $ty)[0].getElementsByTagName("input")[0];
        $eo.style.background = "rgb(200,200,200)";
        $eo.style.color = "rgb(0,0,0)";
    }

}

$xs("https://raw.githubusercontent.com/Kauany021/haxball/main/header", function (error, meta, $iu) {
    if ($iu && $iu.toString() != "") {
        let $xk = $iu.toString();
        document.body.insertAdjacentHTML("afterbegin", $xk);

        let $yx = document.querySelector("#closeButton");
        $yx.addEventListener("click", ($va) => {
            ipcRenderer.send("close");
        });
        let $xj = document.querySelector("#animationsButton");
        $xj.addEventListener("click", ($va) => {
            if (getComputedStyle(document.getElementsByClassName("main")[0]).display == "none") {
                $dx(false);
                document.getElementsByClassName("main")[0].style.display = "flex";
                if (localStorage.getItem("animations")) {
                    $bv = JSON.parse(localStorage.getItem("animations"));
                }
                else {
                    localStorage.setItem("animations", JSON.stringify($rx));
                    $bv = JSON.parse(localStorage.getItem("animations"));
                }
                document.getElementsByClassName("saveButton")[0].style.display = "flex"; document.getElementsByClassName("createAnimButton")[0].style = "display: flex";
                document.getElementsByClassName("resetButton")[0].style = "display: flex";
                document.getElementById("animationsButton").textContent = "CANCELAR"

                $zo();
            }
            else {
                document.getElementsByClassName("main")[0].style.display = "none";

                document.getElementsByClassName("saveButton")[0].style.display = "none";
                document.getElementsByClassName("createAnimButton")[0].style = "display: none";
                document.getElementsByClassName("resetButton")[0].style = "display: none";

                document.getElementById("animationsButton").textContent = "ANIMAÇÕES"
            }
        });
        let $px = document.querySelector("body > header > ul > div.saveButton");

        $px.addEventListener("mouseenter", ($va) => {
            if ($bv == null) return;
            let $kj = JSON.parse(localStorage.getItem("animations"));
            if (JSON.stringify($kj) === JSON.stringify($bv)) {

            } else {
                $px.style = "background-color: rgb(16, 136, 62); display: flex";
            }
        });

        $px.addEventListener("mouseleave", ($va) => {
            if ($bv == null) return;
            $px.style = "background-color: rgb(35,35,35); display: flex";
        });
        $px.addEventListener("click", ($va) => {
            if ($bv == null) return;
            let $kj = JSON.parse(localStorage.getItem("animations"));
            if (JSON.stringify($kj) === JSON.stringify($bv)) {
                return;
            }
            localStorage.setItem("animations", JSON.stringify($bv));
            document.getElementsByClassName("main")[0].style.display = "none";
            document.getElementsByClassName("saveButton")[0].style = "background-color: rgb(35,35,35)";

            document.getElementsByClassName("saveButton")[0].style.display = "none";
            document.getElementsByClassName("createAnimButton")[0].style = "display: none";
            document.getElementsByClassName("resetButton")[0].style = "display: none";

            document.getElementById("animationsButton").textContent = "ANIMAÇÕES"

            if ($bv[0] && $mn.querySelector("#AnimName")) { 
                $mn.querySelector("#AnimName").textContent = "Anim: " + $bv[0][0];
            }



            $bv = null;
            $ax = 0;
            $ty = null;
            $tf = null;
        });

        let $xd = document.getElementsByClassName("createAnimButton")[0];
        $xd.addEventListener("click", ($va) => {
            if ($bv == null) return;
            $bv.push(["Teste01", [[1, "K"], [1, "A"], [1, "U"]]]);
            $zo();
        });

        setTimeout(() => {
            ipcRenderer.send("gameModifyLoaded");
        }, 3000);
    }
});

const $ou = "Haxball X";
const $uy = "snapshot-1.0.0";
const $yf = "Kauany - ARENA CUP 2022❤";

let $xr = false;
let $rx = [["Kauany", [[0.5, "K"], [0.5, "A"], [0.5, "U"], [0.5, "A"], [0.5, "N"], [0.5, "Y"]]], ["Arena Cup", [[0.5, "A"], [0.5, "R"], [0.5, "E"], [0.5, "N"], [0.5, "A"], [1, ""], [0.5, "C"], [0.5, "U"], [0.5, "P"]]]];

let $lx = document.getElementsByClassName("flexRow flexGrow")[0];
let $ux = document.createElement("div");
$ux.setAttribute("class", "gameInfo");
$ux.style = "display: flex; height: content-fit; position: Absolute; bottom: 1.6vw; right: 10px;";
let $ex = document.createElement("div");
$ex.setAttribute("class", "gameInfo");
$ex.style = "display: flex; flex-flow: wrap; width: 13vw; height: content-fit; position: Absolute; bottom: 0.5vw; right: 10px; justify-content: center; align-items: center";

let $sx = document.createElement("div");
$sx.textContent = $ou;
$sx.style = "align-items: center; justify-content: center; width: content-fit; height: content-fit; font-size: 1vw; font-family: 'Calibri'; color: rgb(255,255,255); white-space: nowrap; margin-right: 0.2vw; opacity: 50%";
$ux.appendChild($sx);

let $xi = document.createElement("div");
$xi.textContent = "versão " + $uy;
$xi.style = "align-items: center; justify-content: center;width:content-fit; height: content-fit; font-size: 1vw; font-family: 'Calibri'; color: rgb(200,200,200); white-space: nowrap; opacity: 50%";
$ux.appendChild($xi);

let $vx = document.createElement("div");
$vx.textContent = $yf;
$vx.style = "align-items: center; justify-content: center;width:content-fit; height: content-fit; width: content-fit; font-size: 1vw; font-family: 'Calibri'; color: rgb(182, 57, 57); white-space: nowrap; opacity: 50%;";
$ex.appendChild($vx);

$lx.appendChild($ux);
$lx.appendChild($ex);


let $ax = 0;
let $bs = 0;
let $wx = false;

function $aa($mn, $ia) {
    let $xg = $mn.querySelector("body > div > div > div.bottom-section > div.chatbox-view > div.input > input[type=text]");
    if (!$xg) {
        $xr = false;
        return;
    }
    let $xc = $mn.getElementsByClassName("input")[0].getElementsByTagName("button")[0];
    let $nx = $mn.getElementsByClassName("log ps")[0];
    let $vq = JSON.parse(localStorage.getItem("animations"));
    let $bh = $vq[$ax];

    if ($xr == $ia && $bh) {
        let $vz = $bh[1];
        let $zz = $vz[$bs];
        let $ox = 5000;
        if ($zz) {
            $ox = $zz[0] * 1000;
            if ($wx == false && $mn.activeElement != $xg) {

                $xg.value = "/avatar " + $zz[1];
                $xc.click();

                if ($vz[$bs + 1]) {
                    $bs += 1;
                }
                else {
                    $bs = 0;
                }
            }

            for (let $qx of $nx.getElementsByClassName("notice")) {
                if ($qx.textContent == "Avatar set") {
                    $qx.remove();
                }
            }
        }


        setTimeout(() => {
            if ($xr == $ia) {
                $aa($mn, $xr);
            }
        }, $ox);
    }
}

function $dx($jx) {
    let $gx = $mn.getElementsByClassName("isPlaying")[0];
    if (!$gx) return;
    if ($jx == true) {
        $xr = new Date().getTime();
        $gx.textContent = "Playing: SIM"
        $gx.style = "color: rgb(170, 245, 110)";
        $bs = 0;
        $aa($mn, $xr);
    } else {
        $xr = false;
        $gx.textContent = "Playing: NÃO"
        $gx.style = "color: rgb(245, 110, 110)";
    }
}

$mn.addEventListener("keydown", ($va) => {
    if (!$mn.getElementsByClassName("input")[0]) return;
    let $xg = $mn.getElementsByClassName("input")[0].getElementsByTagName("input")[0];
    if ($va.key.toUpperCase() == "G") {
        if ($mn.activeElement == $xg) return;
        if (!$mn.getElementsByClassName("isPlaying")[0]) return;
        if ($xr == false) {
            $dx(true);
        } else {
            $dx(false);
        }


    } else if ($va.key.toUpperCase() == "I") {
        let $vq = JSON.parse(localStorage.getItem("animations"));
        if (!$mn.querySelector("#AnimName")) return;
        if ($vq.length == 0) {
            localStorage.setItem("animations", JSON.stringify($rx));
            $vq = $rx;
        }
        if ($vq[$ax + 1]) {
            $ax = $ax + 1;

            $mn.querySelector("#AnimName").textContent = "Anim: " + $vq[$ax][0];
        } else {
            $ax = 0;
            $mn.querySelector("#AnimName").textContent = "Anim: " + $vq[$ax][0];
        }
        $bs = 0;
    } else if ($va.key.toUpperCase() == "U") {
        let $vq = JSON.parse(localStorage.getItem("animations"));
        if ($vq.length == 0) {
            localStorage.setItem("animations", JSON.stringify($rx));
            $vq = $rx;
        }
        if ($vq[$ax - 1] && $vq[$ax - 1][0]) {
            $ax = $ax - 1;
            $mn.querySelector("#AnimName").textContent = "Anim: " + $vq[$ax][0];
        } else {
            $ax = $vq.length - 1;
            $mn.querySelector("#AnimName").textContent = "Anim: " + $vq[$ax][0];
        }
        $bs = 0;
    }
});


async function $bx() {
    setTimeout(() => {
        let $kx = $mn.getElementsByClassName("game-view")[0];
        let $ft = $mn.getElementsByClassName("gui")[0];
        let $zc = $mn.getElementsByClassName("roomlist-view")[0];
        let $rp = $mn.getElementsByClassName("choose-nickname-view")[0];

        if ($kx && !$ft) {
            document.getElementsByClassName("gameInfo")[0].style.display = "none";
            document.getElementsByClassName("gameInfo")[1].style.display = "none";
            $mn.querySelector("body > div:nth-child(1) > div > div.bottom-section > div.buttons").style = "width: 200px"
            let $tp = $mn.querySelector("body > div:nth-child(1) > div > div.bottom-section > div.buttons");

            let $pp = document.createElement("div");
            $pp.style = "display: flex; width: 100%; height: 100%; flex-direction: column; align-items: center; justify-content: center;";
            $pp.className = "gui";

            let $pi = document.createElement("div");
            $pi.textContent = "Anim: Ola World";
            $pi.id = "AnimName";
            $pi.style = "margin-bottom: 5px; font-size: 13px; font-family: calibri; "
            $pp.appendChild($pi);
            let $vu = document.createElement("div");
            $vu.setAttribute("class", "isPlaying");
            $vu.textContent = "Playing: NÃO";
            $vu.style = "margin-bottom: 5px; font-size: 18px; font-family: calibri; color: rgb(245,110,110)";
            $pp.appendChild($vu);
            $tp.appendChild($pp);



            let $vq = JSON.parse(localStorage.getItem("animations"));
            if ($vq.length > 0) {
                $mn.querySelector("#AnimName").textContent = "Anim: " + $vq[$ax][0];
            } else {
                localStorage.setItem("animations", JSON.stringify($rx));
                $vq = $rx;
                $mn.querySelector("#AnimName").textContent = "Anim: " + $vq[$ax][0];
            }
        } else if ($zc || $rp) {
            let $fo = document.getElementsByClassName("gameInfo");
            if (getComputedStyle($fo[0]).display == "none") {
                document.getElementsByClassName("gameInfo")[0].style.display = "flex";
                document.getElementsByClassName("gameInfo")[1].style.display = "flex";
            }
        }
        $bx($mn);
    }, 100);
}

$bx();
